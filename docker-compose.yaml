version: '3.8'

services:

  db:
    image: postgres:12.4-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - psql_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    ports:
    - "5432:5432"

  api:
    build:
      context: .
      dockerfile: dockerfile
    restart: always
    environment:
      DB_HOST: db
    volumes:
      - ./.env:/server/.env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command: gunicorn todolist.wsgi:application -w 4 --bind 0.0.0.0:8000

  collectstatic:
    build:
      context: .
      dockerfile: dockerfile
    environment:
      DB_HOST: db
    volumes:
      - ./.env:/server/.env
      - static:/server/static
    depends_on:
      db:
        condition: service_healthy
    command: python3 manage.py collectstatic -c --no-input

  front:
    image: sermalenk/skypro-front:lesson-37
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/usr/share/nginx/html/static/
      # - letsencrypt:/etc/letsencrypt
    ports:
      - "80:80"
    depends_on:
      - db
      - api
      - collectstatic

volumes:
  psql_data:
    driver: local
  static:
    driver: local
#  letsencrypt:
#    driver: local
