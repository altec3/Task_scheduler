version: '3.8'

services:

  db:
    image: postgres:12.4-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - psql_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  migrations:
    image: ${DOCKER_USERNAME}/thesis:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      DB_HOST: db
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate

  api:
    image: ${DOCKER_USERNAME}/thesis:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    environment:
      DB_HOST: db
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: gunicorn todolist.wsgi:application --bind 0.0.0.0:8000

  collectstatic:
    image: ${DOCKER_USERNAME}/thesis:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      DB_HOST: db
    env_file:
      - .env
    volumes:
      - static:/server/static
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: python3 manage.py collectstatic -c --no-input

  front:
    image: sermalenk/skypro-front:lesson-36
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/usr/share/nginx/html/static/
    ports:
      - "80:80"
    depends_on:
      - db
      - api
      - collectstatic

volumes:
  psql_data:
    driver: local
  static:
    driver: local
