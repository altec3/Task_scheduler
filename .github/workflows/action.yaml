name: Build and deploy thesis_project
on: [push]
jobs:
  docker_build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t altec3/thesis:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: docker push
        run: docker push altec3/thesis:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    env:
      DB_USER: ${{  secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: decrypt .env
        uses: anthonykgross/ansible-vault-cli-github-action@v1
        with:
          vault_key: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
          command: "ansible-vault decrypt deploy/.env"
      - name: render configs
        run: |
          cat deploy/docker-compose_temp.yaml | envsubst > deploy/docker-compose.yaml
          rm -f deploy/docker-compose_temp.yaml
      - name: copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "deploy/*"
          target: "thesis_project_ci"
          strip_components: 1
      - name: deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd thesis_project_ci
            docker compose up -d
      - name: clear trash
        if: always()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            docker system prune -a -f
